/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package paper.GUI;

import paper.model.OrderPenjualan;
import paper.model.Produk;
import javax.swing.JOptionPane;
import paper.util.AppUtils;

/**
 *
 * @author Deva
 */
public class OrderPenjualanGUI extends javax.swing.JPanel {
    // Gunakan referensi langsung ke static list Produk
    private java.util.List<Produk> daftarProduk = paper.model.Produk.DATA_SAMPLE;
    private OrderPenjualan currentOrder;

    // Tambahkan di atas konstruktor
    private javax.swing.table.DefaultTableModel tableModel;
    private java.util.List<Object> detailTransaksi = new java.util.ArrayList<>();

    public OrderPenjualanGUI() {
        initComponents();

        // Isi dropproduk hanya dengan nama produk
        dropproduk.removeAllItems();
        for (Produk p : daftarProduk) {
            dropproduk.addItem(p.getNama());
        }

        kodepenjualan.setEditable(false);

        tableModel = new javax.swing.table.DefaultTableModel(
            new Object[]{"Produk", "Kode Penjualan"}, 0
        );
        jTable1.setModel(tableModel);

        refreshTable(); // Tambahkan ini agar data selalu muncul setiap panel dibuka
    }

    private void refreshTable() {
        tableModel.setRowCount(0);
        // Ambil data dari static list model
        for (OrderPenjualan order : paper.model.OrderPenjualan.dataOrderPenjualan) {
            for (var entry : order.getDaftarProdukDijual().entrySet()) {
                tableModel.addRow(new Object[]{
                    entry.getKey().getNama(), order.getIdTransaksi()
                });
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dropproduk = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jsubmit = new javax.swing.JButton();
        jedit = new javax.swing.JButton();
        jdelete = new javax.swing.JButton();
        kodepenjualan = new javax.swing.JTextField();

        dropproduk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "produk" }));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("ORDER PENJUALAN");

        jLabel2.setText("Daftar Produk");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Daftar Produk", "Kode penjualan"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("Kode penjualan");

        jsubmit.setText("submit");
        jsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsubmitActionPerformed(evt);
            }
        });

        jedit.setText("edit");
        jedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jeditActionPerformed(evt);
            }
        });

        jdelete.setText("delete");
        jdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jdeleteActionPerformed(evt);
            }
        });

        kodepenjualan.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jdelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jedit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsubmit))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dropproduk, 0, 142, Short.MAX_VALUE)
                            .addComponent(kodepenjualan))))
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dropproduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(kodepenjualan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jsubmit)
                    .addComponent(jedit)
                    .addComponent(jdelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private String generateKodePenjualan() {
        return AppUtils.generateKode("ORD");
    }

    private void jsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsubmitActionPerformed
        int idxProduk = dropproduk.getSelectedIndex();

        if (idxProduk < 0) {
            JOptionPane.showMessageDialog(this, "Pilih produk!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Produk produkDipilih = daftarProduk.get(idxProduk);

        // Selalu generate kode baru setiap submit
        String kode = generateKodePenjualan();
        kodepenjualan.setText(kode);
        currentOrder = new OrderPenjualan(kode, new java.util.Date(), 0.0, null);
        paper.model.OrderPenjualan.dataOrderPenjualan.add(currentOrder);

        currentOrder.tambahProduk(produkDipilih, 1);
        refreshTable(); // Refresh tabel agar data baru langsung muncul
        jTable1.clearSelection();
        currentOrder = null;
    }//GEN-LAST:event_jsubmitActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            // Ambil nama produk dari tabel
            String namaProduk = (String) tableModel.getValueAt(selectedRow, 0);
            dropproduk.setSelectedItem(namaProduk);
            // kodepenjualan sudah readonly, tidak perlu diubah
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jeditActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow < 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diedit di tabel!", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        int idxProduk = dropproduk.getSelectedIndex();
        if (idxProduk < 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Pilih produk!", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        String namaProduk = daftarProduk.get(idxProduk).getNama();

        // Update data di tabel
        tableModel.setValueAt(namaProduk, selectedRow, 0);
        // kode penjualan tidak diedit (readonly)
        jTable1.clearSelection();
    }//GEN-LAST:event_jeditActionPerformed

    private void jdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdeleteActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow < 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus di tabel!", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        int confirm = javax.swing.JOptionPane.showConfirmDialog(
            this,
            "Yakin ingin menghapus data ini?",
            "Konfirmasi Hapus",
            javax.swing.JOptionPane.YES_NO_OPTION
        );
        if (confirm == javax.swing.JOptionPane.YES_OPTION) {
            tableModel.removeRow(selectedRow);
            jTable1.clearSelection();
        }
    }//GEN-LAST:event_jdeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dropproduk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jdelete;
    private javax.swing.JButton jedit;
    private javax.swing.JButton jsubmit;
    private javax.swing.JTextField kodepenjualan;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        javax.swing.SwingUtilities.invokeLater(() -> {
            javax.swing.JFrame frame = new javax.swing.JFrame("Order Penjualan");
            frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
            frame.setContentPane(new OrderPenjualanGUI());
            frame.pack();
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
        });
    }
}
